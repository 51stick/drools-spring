<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:kie="http://drools.org/schema/kie-spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://drools.org/schema/kie-spring
        http://drools.org/schema/kie-spring.xsd">

    <kie:kmodule id="message-kmodule">
        <kie:kbase name="message_kbase" includes="message_kbase2" packages="com.rules.message">
            <kie:ksession name="message_ksession" scope="Singleton"/>
        </kie:kbase>
        <kie:kbase name="message_kbase2" packages="com.rules.message2">
            <kie:ksession name="message_ksession2" scope="Singleton"/>
        </kie:kbase>
    </kie:kmodule>

    <!-- 如果是使用KModuleBeanFactoryPostProcessor，并且要使用注解的话，还得开启意思下的context扫描包 -->
    <!--<context:component-scan base-package="org.kie.spring"/>
    <bean id="kiePostProcessor" class="org.kie.spring.KModuleBeanFactoryPostProcessor" />-->

    <!-- 使用drools的注解形式获取，kession，kcontainer, 只需要使用KModuleAnnotationPostProcessor即可 -->
    <bean id="kiePostProcessor" class="org.kie.spring.annotations.KModuleAnnotationPostProcessor"/>

</beans>
